redis:
  main:
    host: ${REDIS_MAIN_HOST}
    port: 6379

jwt:
  secret: ${JWT_SECRET}
  expiration: 3600000

spring:
  datasource:
    url: jdbc:mysql://${DB_CLOUD_HOST}:3306/zariyo
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
    consumer:
      group-id: reservation-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      max-poll-records: 100
      fetch-min-size: 1
      fetch-max-wait: 500
      properties:
        spring.json.trusted.packages: "com.zariyo.concert.application.consumer.event"
        session.timeout.ms: 30000
        heartbeat.interval.ms: 10000
    listener:
      ack-mode: record
      concurrency: 3
      poll-timeout: 3000
